# @name SWITCH case VLAN create/remove test while pinging gateway after each create and remove 
# @desc Creates and removes vlan for each available ethernet interface. After every creation and removal of vlan, the gateway for corresponding ethernet interface is pinged.
# @requires net/dual_mac

VLAN-SWITCH_XS_FUNC_ALL_VLANS_UP_DOWN_PING source 'common.sh'; dual_mac=`find /proc/device-tree/ -name dual_emac`; echo "output is $dual_mac"; if [[ ! -z "$dual_mac" ]]; then die "This is a dual mac case, use a different dtb to test switch mode"; fi; check_config_options "ym" CONFIG_VLAN_8021Q; iface=`get_eth_iface_name.sh` || die "error getting eth interface name"; do_cmd "eth_vlan.sh" -v 10 
VLAN-SWITCH_L_FUNC_ALL_VLANS_UP_DOWN_PING source 'common.sh'; dual_mac=`find /proc/device-tree/ -name dual_emac`; echo "output is $dual_mac"; if [[ ! -z "$dual_mac" ]]; then die "This is a dual mac case, use a different dtb to test switch mode"; fi; check_config_options "ym" CONFIG_VLAN_8021Q; iface=`get_eth_iface_name.sh` || die "error getting eth interface name"; do_cmd "eth_vlan.sh" -v 100 
VLAN-SWITCH_XL_FUNC_ALL_VLANS_UP_DOWN_PING source 'common.sh'; dual_mac=`find /proc/device-tree/ -name dual_emac`; echo "output is $dual_mac"; if [[ ! -z "$dual_mac" ]]; then die "This is a dual mac case, use a different dtb to test switch mode"; fi; check_config_options "ym" CONFIG_VLAN_8021Q; iface=`get_eth_iface_name.sh` || die "error getting eth interface name"; do_cmd "eth_vlan.sh" -v 4096 
